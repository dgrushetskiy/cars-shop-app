server.port=5000
spring.application.name=cars-app-ws
server.compression.enabled=true
spring.main.banner-mode=off
spring.jmx.enabled=false
debug=true

# api doc
springdoc.cache.disabled=true
springdoc.api-docs.path=/api-docs
springdoc.swagger-ui.path=/swagger-ui.html
springdoc.swagger-ui.use-root-path=true
springdoc.swagger-ui.url=/api-docs
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.config-url=/api-docs/swagger-config

# db
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.url=jdbc:postgresql://127.0.0.1:5433/cars_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.validationQuery=SELECT 1

#liquebase
spring.liquibase.change-log=classpath:db/changelog/changelog.xml
spring.liquibase.url=jdbc:postgresql://127.0.0.1:5433/cars_db
spring.liquibase.user=root
spring.liquibase.password=root
spring.liquibase.liquibase-schema=liquibase_schema
spring.liquibase.default-schema=cars


# Hikari will use the above plus the following to setup connection pooling
spring.datasource.hikari.minimumIdle=5
spring.datasource.hikari.maximumPoolSize=25
spring.datasource.hikari.idleTimeout=30000
spring.datasource.hikari.poolName=SpringBootJPAHikariCP
spring.datasource.hikari.maxLifetime=2000000
spring.datasource.hikari.connectionTimeout=30000
spring.datasource.hikari.max-lifetime=2000000
spring.datasource.hikari.idle-timeout=30000
spring.datasource.hikari.pool-name=SpringBootJPAHikariCP
spring.datasource.hikari.minimum-idle=5

spring.jpa.hibernate.connection.provider_class=org.hibernate.hikaricp.internal.HikariCPConnectionProvider

spring.jpa.show-sql=true
spring.jpa.generate-ddl=false
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.hibernate.ddl-auto=validate
spring.datasource.hikari.connection-timeout=60000
spring.datasource.hikari.maximum-pool-size=25
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.open-in-view=true



logging.level.org.hibernate.SQL=debug
logging.level.com.zaxxer.hikari.HikariConfig=DEBUG
logging.level.org.hibernate.type.descriptor.sql=trace

## Batch
spring.batch.job.enabled=false
spring.batch.jdbc.initialize-schema=always
spring.batch.jdbc.table-prefix=batch_schema.springbatch_. 

## Jackson Properties
spring.jackson.serialization.WRITE_DATES_AS_TIMESTAMPS= false
spring.jackson.time-zone= UTC

## App Properties
jwt.token.secret= wGcyYiF@rDPFvOr_td0tPG06xP9gfR=XHI$I1y7_0Oh0ciM48iFu
jwt.token.expired = 3600000

# Comma separated list of allowed origins
app.cors.allowedOrigins = http://localhost:3000

#file
spring.servlet.multipart.max-file-size=20MB
spring.servlet.multipart.max-request-size=200MB

#for email
spring.mail.host = smtp.gmail.com
spring.mail.username = email-dev@gmail.com
spring.mail.password = password

#Below Properties are needed for maintaining the session.
#Two Step verification should not be enabled for gmail.

spring.mail.properties.mail.smtp.auth = true
spring.mail.properties.mail.smtp.socketFactory.port = 465
spring.mail.properties.mail.smtp.socketFactory.class = javax.net.ssl.SSLSocketFactory
spring.mail.properties.mail.smtp.socketFactory.fallback = false
support.email=email@yandex.ru
supportTwo.email=email2@gmail.com
copysupport.email=email3@yandex.ru

# \u043F\u0430\u0442\u0442\u0435\u0440\u043D \u043B\u043E\u0433\u043E\u0432 \u0434\u043B\u044F \u043A\u043E\u043D\u0441\u043E\u043B\u0438
logging.pattern.console= "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"

# \u043F\u0430\u0442\u0442\u0435\u0440\u043D \u043B\u043E\u0433\u043E\u0432 \u0434\u043B\u044F \u0437\u0430\u043F\u0438\u0441\u0438 \u0432 \u0444\u0430\u0439\u043B
logging.pattern.file= "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"


logging.file.path=/home/cars-shop-app/log/app.log
